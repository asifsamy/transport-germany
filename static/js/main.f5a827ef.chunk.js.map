{"version":3,"sources":["containers/Home.js","components/Card.js","components/Pagination.js","containers/StopDetail.js","containers/ShowFavorites.js","components/Navbar.js","hocs/Layout.js","App.js","reportWebVitals.js","index.js","swDev.js"],"names":["Home","useState","stops","setStops","name","setName","favorites","setFavorites","getArray","JSON","parse","localStorage","getItem","useEffect","a","axios","get","res","data","console","log","fetchData","addFav","id","array","addArray","map","item","key","splice","push","setItem","stringify","removeItem","availableTransport","transports","avail_trans","Object","entries","transport","i","className","Helmet","content","class","type","value","onChange","e","target","placeholder","selectedstops","stop","to","products","includes","onClick","style","color","getStops","Card","props","departure_name","moment","departure_time","calendar","transport_type","transport_name","transport_mode","platform","destination","delay","Pagination","dataPerPage","totalData","paginate","pageNumbers","Math","ceil","pageNumber","href","StopDetail","departures","setDepartures","currentPage","setCurrentPage","stopId","match","params","window","scrollTo","indexOfLastData","indexOfFirstData","currentData","slice","display","Array","isArray","length","departure","direction","when","line","product","mode","displayDepartures","ShowFavorites","favList","x","Navbar","exact","Layout","children","App","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","swUrl","process","navigator","serviceWorker","register","response","swDev"],"mappings":"iTA8JeA,EAxJF,WAET,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAwBF,mBAAS,IAAjC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAAkCJ,mBAAS,IAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KACMC,EAAWC,KAAKC,MAAMC,aAAaC,QAAQ,cAAgB,KAEjEC,qBAAU,WACO,KAATT,GACe,uCAAG,4BAAAU,EAAA,+EAIQC,IAAMC,IAAN,uDAA0DZ,EAA1D,gBAJR,OAIJa,EAJI,OAKVd,EAASc,EAAIC,MALH,gDAQVC,QAAQC,IAAI,oBARF,yDAAH,oDAYfC,KAEL,CAACjB,IAEJS,qBAAU,WACW,IAAbL,GACAD,EAAa,YAAIC,MAGtB,IAGH,IAKMc,EAAS,SAAClB,EAAMmB,GAClB,IAAIC,EAAQlB,EACRmB,GAAW,EACfD,EAAME,KAAI,SAACC,EAAMC,GACTD,IAASJ,IACTC,EAAMK,OAAOD,EAAK,GAClBH,GAAW,MAGfA,GACAD,EAAMM,KAAKP,GAEfhB,EAAa,YAAIiB,IAGjBb,aAAaoB,QAAQ,YAAatB,KAAKuB,UAAU1B,IAElC,MADDK,aAAaC,QAAQW,GAAM,KAErCZ,aAAaoB,QAASR,EAAKd,KAAKuB,UAAU5B,IAG1CO,aAAasB,WAAWV,IAK1BW,EAAqB,SAACC,GACxB,IAAIC,EAAc,GAalB,OAZAC,OAAOC,QAAQH,GAAYT,KAAI,SAACa,EAAWC,GACvC,OAAqB,IAAjBD,EAAU,GACHH,EAAYN,KACf,sCAAiBS,EAAU,GAA3B,QAAYC,IAITJ,EAAYN,KACf,yBAAYU,OAIjBJ,GAuCX,OACI,sBAAKK,UAAU,iBAAf,UACI,eAACC,EAAA,EAAD,WACI,yDACA,sBACItC,KAAK,cACLuC,QAAQ,iBAGhB,sBAAKF,UAAU,YAAf,UACI,sBAAKG,MAAM,YAAX,UACI,wDACA,iQAOJ,sBAAKH,UAAU,eAAf,UACI,uBACII,KAAK,OACLJ,UAAU,wBACVK,MAAO1C,EACP2C,SA5GM,SAAAC,GACtB3C,EAAQ2C,EAAEC,OAAOH,QA4GDI,YAAY,wBA5Df,WACb,IAAIC,EAAgB,GA+BpB,OA9BAjD,EAAMwB,KAAI,SAAA0B,GACN,OAAOD,EAAcrB,KACjB,8BAEQsB,EAAK7B,GACD,8BACI,cAAC,IAAD,CAAM8B,GAAE,gBAAWD,EAAK7B,IAAxB,SAA+B6B,EAAKhD,OADxC,IAEMgD,EAAKE,SAAWpB,EAAmBkB,EAAKE,UAAY,GAF1D,IAGI,4CAEIhD,EAAUiD,SAASH,EAAK7B,IACpB,qDAAuB,cAAC,IAAD,CACnBiC,QAAS,kBAAMlC,EAAO8B,EAAKhD,KAAMgD,EAAK7B,KACtCkC,MAAO,CAAEC,MAAO,YAIpB,mDAAqB,cAAC,IAAD,CACjBF,QAAS,kBAAMlC,EAAO8B,EAAKhD,KAAMgD,EAAK7B,KACtCkC,MAAO,CAAEC,MAAO,cAdxBN,EAAK7B,IAmBb,SAMb4B,EA8BMQ,a,iBChGNC,EAlDF,SAACC,GAuBV,OACI,gCACI,qBAAKpB,UAAU,aAAf,SACI,sBAAKA,UAAU,uEAAf,UACI,sBAAKA,UAAU,uCAAf,UACI,qBAAIA,UAAU,OAAd,wBAAiCoB,EAAMC,eAAe,0BACtD,gCAAO,uCAAUC,IAAOF,EAAMG,gBAAgBC,mBAElD,oBAAGxB,UAAU,OAAb,UAAqBoB,EAAMK,eAA3B,MAA8CL,EAAMM,eAApD,qBAAsFN,EAAMO,eAA5F,OACA,oBAAG3B,UAAU,OAAb,uBAA+BoB,EAAMQ,UAAaR,EAAMQ,SAAW,SACnE,qBAAIzB,MAAM,OAAV,sBAA2BiB,EAAMS,eA9BzB,OAAhBT,EAAMU,OAAkC,IAAhBV,EAAMU,OAAeV,EAAMU,MAAQ,EAEvD,8BACI,uBAAM9B,UAAU,QAAhB,oBAA+B,uBAAMA,UAAU,6BAAhB,UAA8CoB,EAAMU,MAAQ,GAA5D,eAIlCV,EAAMU,MAAQ,EAEf,sBAAK9B,UAAU,uCAAf,UACI,uBAAMA,UAAU,QAAhB,oBAA+B,uBAAMA,UAAU,6BAAhB,UAA8CoB,EAAMU,MAAQ,GAA5D,aAC/B,uBAAO9B,UAAU,eAAjB,kDAKD,UAkBP,2BCnBG+B,EApBI,SAAC,GAGhB,IAH0D,IAAxCC,EAAuC,EAAvCA,YAAaC,EAA0B,EAA1BA,UAAWC,EAAe,EAAfA,SACpCC,EAAc,GAEXpC,EAAI,EAAGA,GAAKqC,KAAKC,KAAKJ,EAAYD,GAAcjC,IACrDoC,EAAY9C,KAAKU,GAGrB,OACI,8BACI,oBAAIC,UAAU,aAAd,SACKmC,EAAYlD,KAAI,SAAAqD,GAAU,OACvB,oBAAqBtC,UAAU,YAA/B,SACI,mBAAGe,QAAS,kBAAMmB,EAASI,IAAaC,KAAK,KAAKvC,UAAU,YAA5D,SAAyEsC,KADpEA,WCmFdE,EA1FI,SAACpB,GAGhB,MAAoC5D,mBAAS,IAA7C,mBAAOiF,EAAP,KAAmBC,EAAnB,KACA,EAAsClF,mBAAS,GAA/C,mBAAOmF,EAAP,KAAoBC,EAApB,KACA,EAAsBpF,mBAAS,GAAxBwE,EAAP,oBAEA5D,qBAAU,WAEN,IAAMyE,EAASzB,EAAM0B,MAAMC,OAAOjE,GAClCkE,OAAOC,SAAS,EAAG,GACJ,uCAAG,4BAAA5E,EAAA,+EAEQC,IAAMC,IAAN,6CAAgDsE,EAAhD,gBAFR,OAEJrE,EAFI,OAGVkE,EAAclE,EAAIC,MAHR,gDAOVC,QAAQC,IAAI,oBAPF,yDAAH,oDAWfC,KAED,CAACwC,EAAM0B,MAAMC,OAAOjE,KAGvB,IA+BMoE,EAAkBP,EAAcX,EAChCmB,EAAmBD,EAAkBlB,EACrCoB,EAAcX,EAAWY,MAAMF,EAAkBD,GAOvD,OACI,sBAAKlD,UAAU,iBAAf,UACI,eAACC,EAAA,EAAD,WACI,+DACA,sBACItC,KAAK,cACLuC,QAAQ,uBAGhB,sBAAKF,UAAU,YAAf,UAjDkB,WACtB,IAAIsD,EAAU,GAEd,OAAIC,MAAMC,QAAQJ,IAAgBA,EAAYK,QAE1CL,EAAYnE,KAAI,SAAAyE,GACZ,OAAOJ,EAAQjE,KACX,cAAC,EAAD,CACIP,GAAI4E,EAAU/C,KAAK7B,GACnBuC,eAAkBqC,EAAU/C,KAAKhD,KACjCkE,YAAa6B,EAAUC,UACvBpC,eAAgBmC,EAAUE,KAC1B9B,MAAO4B,EAAU5B,MACjBL,eAAgBiC,EAAUG,KAAKC,QAC/BpC,eAAgBgC,EAAUG,KAAKlG,KAC/BgE,eAAgB+B,EAAUG,KAAKE,KAC/BnC,SAAU8B,EAAU9B,eAKzB0B,GAIH,6DAyBCU,GAED,cAAC,EAAD,CACIhC,YAAaA,EACbC,UAAWQ,EAAWgB,OACtBvB,SAnBC,SAACI,GACdM,EAAeN,aCbR2B,EArDO,WAGlB,IAFA,IAAIC,EAAU,GACRnG,EAAWC,KAAKC,MAAMC,aAAaC,QAAQ,cAAgB,KACxD4B,EAAI,EAAGA,EAAIhC,EAAS0F,OAAQ1D,IAAK,CACtC,IAAIoE,EAAIpG,EAASgC,GACjBmE,EAAQnE,GAAK/B,KAAKC,MAAMC,aAAaC,QAAQ,CAACgG,KAAO,IA+BzD,OACI,sBAAKnE,UAAU,iBAAf,UACI,eAACC,EAAA,EAAD,WACI,6DACA,sBACItC,KAAK,cACLuC,QAAQ,yBAGhB,kDACA,qBAAKF,UAAU,OAAf,SArCS,WACb,IAAIU,EAAgB,GACpB,OAAI6C,MAAMC,QAAQU,IAAYA,EAAQT,QAClCS,EAAQjF,KAAI,SAAC0B,EAAMZ,GACf,OAAOW,EAAcrB,KACjB,8BAEQsB,EACI,4BACI,cAAC,IAAD,CAAMC,GAAE,gBAAW7C,EAASgC,IAA5B,SAAmCY,KAD/BZ,GAGR,SAMbW,GAIH,8DAiBCQ,S,OChCFkD,EAhBA,WAEX,OACI,qBAAKpE,UAAU,YAAf,SACI,qBAAKA,UAAU,gDAAf,SACI,qBAAKA,UAAU,2BAA2BlB,GAAG,qBAA7C,SACI,sBAAKkB,UAAU,aAAf,UACI,cAAC,IAAD,CAASA,UAAU,2BAA2BqE,OAAK,EAACzD,GAAG,IAAvD,kBACA,cAAC,IAAD,CAASZ,UAAU,2BAA2BqE,OAAK,EAACzD,GAAG,aAAvD,oCCDT0D,EAPA,SAAClD,GAAD,OACX,gCACI,cAAC,EAAD,IACCA,EAAMmD,aCcAC,EAZH,kBACV,cAAC,IAAD,UACE,cAAC,EAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOH,OAAK,EAACI,KAAK,aAAaC,UAAWT,IAC1C,cAAC,IAAD,CAAOI,OAAK,EAACI,KAAK,YAAYC,UAAWlC,IACzC,cAAC,IAAD,CAAO6B,OAAK,EAACI,KAAK,IAAIC,UAAWnH,YCF1BoH,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCCdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,IClBe,WAEX,IAAIc,EAAK,UAAMC,qBAAN,UACTC,UAAUC,cAAcC,SAASJ,GAAOX,MAAK,SAACgB,GAC1CpH,QAAQC,IAAI,WAAYmH,MDehCC,K","file":"static/js/main.f5a827ef.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\nimport { IoIosHeart, IoIosHeartEmpty } from 'react-icons/io'\r\nimport { Helmet } from 'react-helmet'\r\n\r\nconst Home = () => {\r\n    /** initialize the states called stops and name */\r\n    const [stops, setStops] = useState([])\r\n    const [name, setName] = useState(\"\")\r\n    const [favorites, setFavorites] = useState([])\r\n    const getArray = JSON.parse(localStorage.getItem('favorites') || '0')\r\n\r\n    useEffect(() => {\r\n        if (name !== \"\") {\r\n            const fetchData = async () => {\r\n                try {\r\n                    /** variable $name comes from the input element. response will show 10 results for matched string */\r\n                    // const res = await axios.get(`https://v5.vbb.transport.rest/locations?query=${name}&results=10`)\r\n                    const res = await axios.get(`https://v5.db.transport.rest/locations?query=${name}&results=10`)\r\n                    setStops(res.data)\r\n                }\r\n                catch (error) {\r\n                    console.log('Something wrong!')\r\n                }\r\n            }\r\n\r\n            fetchData()\r\n        }\r\n    }, [name])\r\n\r\n    useEffect(() => {\r\n        if (getArray !== 0) {\r\n            setFavorites([...getArray])\r\n            // console.log(getArray)\r\n        }\r\n    }, [])\r\n\r\n    /** event handler method to get input element */\r\n    const handleSearchInput = e => {\r\n        setName(e.target.value)\r\n    }\r\n\r\n    /** method for adding/removing stops to favorite list */\r\n    const addFav = (name, id) => {\r\n        let array = favorites\r\n        let addArray = true\r\n        array.map((item, key) => {\r\n            if (item === id) {\r\n                array.splice(key, 1)\r\n                addArray = false\r\n            }\r\n        })\r\n        if (addArray) {\r\n            array.push(id)\r\n        }\r\n        setFavorites([...array])\r\n\r\n        /** add to local storage */\r\n        localStorage.setItem(\"favorites\", JSON.stringify(favorites))\r\n        var storage = localStorage.getItem(id || '0')\r\n        if (storage == null) {\r\n            localStorage.setItem((id), JSON.stringify(name))\r\n        }\r\n        else {\r\n            localStorage.removeItem(id)\r\n        }\r\n    }\r\n\r\n    /** method to get available transports for any stop */\r\n    const availableTransport = (transports) => {\r\n        let avail_trans = []\r\n        Object.entries(transports).map((transport, i) => {\r\n            if (transport[1] === true) {\r\n                return avail_trans.push(\r\n                    <small key={i}> {transport[0]} / </small>\r\n                )\r\n            }\r\n            else {\r\n                return avail_trans.push(\r\n                    <small key={i}></small>\r\n                )\r\n            }\r\n        })\r\n        return avail_trans\r\n    }\r\n\r\n    /** method to get all the stops */\r\n    const getStops = () => {\r\n        let selectedstops = []\r\n        stops.map(stop => {\r\n            return selectedstops.push(\r\n                <div>\r\n                    {\r\n                        stop.id ? (\r\n                            <p key={stop.id}>\r\n                                <Link to={`/stop/${stop.id}`}>{stop.name}</Link>\r\n                                ({stop.products ? availableTransport(stop.products) : \"\"})\r\n                                <span>&nbsp;&nbsp;</span>\r\n                                {\r\n                                    favorites.includes(stop.id) ? (\r\n                                        <span>Unmark Favorite: <IoIosHeart\r\n                                            onClick={() => addFav(stop.name, stop.id)}\r\n                                            style={{ color: 'red' }}\r\n                                        /></span>\r\n                                    ) : (\r\n\r\n                                        <span>Mark Favorite: <IoIosHeartEmpty\r\n                                            onClick={() => addFav(stop.name, stop.id)}\r\n                                            style={{ color: 'red' }}\r\n                                        /></span>\r\n                                    )\r\n                                }\r\n                            </p>\r\n                        ) : \"\"\r\n                    }\r\n\r\n                </div>\r\n            )\r\n        })\r\n        return selectedstops\r\n    }\r\n\r\n    return (\r\n        <div className=\"container mt-5\">\r\n            <Helmet>\r\n                <title>Transport App - Home</title>\r\n                <meta\r\n                    name='description'\r\n                    content='home page'\r\n                />\r\n            </Helmet>\r\n            <div className=\"container\">\r\n                <div class=\"jumbotron\">\r\n                    <h1>Transportation Germany</h1>\r\n                    <p>\r\n                        By Searching any Stop in Germany, Find Your Depatures with the Informations of Arrivals, Available Transports, etc.\r\n                        Mark/Unmark you Favorite Stops and Later You Can Find the Informations by Going to the My Favorinte\r\n                        Page.\r\n                </p>\r\n\r\n                </div>\r\n                <div className=\"form-outline\">\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control col-md-5\"\r\n                        value={name}\r\n                        onChange={handleSearchInput}\r\n                        placeholder=\"Enter your Stoppage\"\r\n                    />\r\n                    {getStops()}\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Home","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport moment from 'moment'\r\n\r\nconst Card = (props) => {\r\n\r\n    const checkDelay = () => {\r\n        if (props.delay !== null && props.delay !== 0 && props.delay > 0) {\r\n            return (\r\n                <div>\r\n                    <span className=\"badge\">Delay: <span className=\"badge text-light bg-danger\">{props.delay / 60} min</span></span>\r\n                </div>\r\n            )\r\n        }\r\n        else if (props.delay < 0) {\r\n            return (\r\n                <div className=\"d-flex w-100 justify-content-between\">\r\n                    <span className=\"badge\">Delay: <span className=\"badge text-light bg-danger\">{props.delay / 60} min</span></span>\r\n                    <small className=\"text-warning\">Warning! Transport comes earlier.</small>\r\n                </div>\r\n            )\r\n        }\r\n        else {\r\n            return null\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"list-group\">\r\n                <div className=\"list-group-item list-group-item-action flex-column align-items-start\">\r\n                    <div className=\"d-flex w-100 justify-content-between\">\r\n                        <h5 className=\"mb-1\">Departure: {props.departure_name}<br /></h5>\r\n                        <small><strong> {moment(props.departure_time).calendar()}</strong></small>\r\n                    </div>\r\n                    <p className=\"mb-1\">{props.transport_type} : {props.transport_name} (Transport Mode: {props.transport_mode})</p>\r\n                    <p className=\"mb-1\">Platform: {props.platform ? + props.platform : \"N/A\"}</p>\r\n                    <h5 class=\"mb-1\">Arrival: {props.destination}</h5>\r\n                    {checkDelay()}\r\n                </div>\r\n            </div>\r\n            <br />\r\n        </div>\r\n    )\r\n}\r\n\r\nCard.propTypes = {\r\n    transport_type: PropTypes.string.isRequired,\r\n    transport_name: PropTypes.string.isRequired,\r\n    transport_mode: PropTypes.string.isRequired,\r\n    destination: PropTypes.string.isRequired,\r\n    departure_time: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Card","import React from 'react'\r\n\r\nconst Pagination = ({ dataPerPage, totalData, paginate }) => {\r\n    const pageNumbers = []\r\n\r\n    for (let i = 1; i <= Math.ceil(totalData / dataPerPage); i++) {\r\n        pageNumbers.push(i)\r\n    }\r\n\r\n    return (\r\n        <nav>\r\n            <ul className='pagination'>\r\n                {pageNumbers.map(pageNumber => (\r\n                    <li key={pageNumber} className='page-item'>\r\n                        <a onClick={() => paginate(pageNumber)} href=\"#!\" className='page-link'>{pageNumber}</a>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Pagination","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport Card from '../components/Card'\r\nimport Pagination from '../components/Pagination'\r\nimport { Helmet } from 'react-helmet'\r\n\r\nconst StopDetail = (props) => {\r\n\r\n    /** initialization of the states. departures state is for getting the data and others for pagination */\r\n    const [departures, setDepartures] = useState([])\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n    const [dataPerPage] = useState(5)\r\n\r\n    useEffect(() => {\r\n        /** variable $stopId is to get the selected stop */\r\n        const stopId = props.match.params.id\r\n        window.scrollTo(0, 0)\r\n        const fetchData = async () => {\r\n            try {\r\n                const res = await axios.get(`https://v5.db.transport.rest/stops/${stopId}/departures`)\r\n                setDepartures(res.data)\r\n\r\n            }\r\n            catch (err) {\r\n                console.log('Something wrong!')\r\n            }\r\n        }\r\n\r\n        fetchData()\r\n\r\n    }, [props.match.params.id])\r\n\r\n    /** method to add the departures to anothe component called Card */\r\n    const displayDepartures = () => {\r\n        let display = []\r\n\r\n        if (Array.isArray(currentData) && currentData.length) {\r\n            /** Card component is used to show the depurtures */\r\n            currentData.map(departure => {\r\n                return display.push(\r\n                    <Card\r\n                        id={departure.stop.id}\r\n                        departure_name = {departure.stop.name}\r\n                        destination={departure.direction}\r\n                        departure_time={departure.when}\r\n                        delay={departure.delay}\r\n                        transport_type={departure.line.product}\r\n                        transport_name={departure.line.name}\r\n                        transport_mode={departure.line.mode}\r\n                        platform={departure.platform}\r\n                    />\r\n                )\r\n            })\r\n\r\n            return display\r\n        }\r\n        else {\r\n            return(\r\n                <span>No Deprture's Information</span>\r\n            )\r\n        }\r\n    }\r\n\r\n    /** Get current departures(data) */\r\n    const indexOfLastData = currentPage * dataPerPage\r\n    const indexOfFirstData = indexOfLastData - dataPerPage\r\n    const currentData = departures.slice(indexOfFirstData, indexOfLastData)\r\n\r\n    /** method to change paginate  */\r\n    const paginate = (pageNumber) => {\r\n        setCurrentPage(pageNumber)\r\n    }\r\n\r\n    return (\r\n        <div className='container mt-5'>\r\n            <Helmet>\r\n                <title>Transport - All Departures</title>\r\n                <meta\r\n                    name='description'\r\n                    content='departures page' \r\n                />\r\n            </Helmet>\r\n            <div className=\"container\">\r\n                {displayDepartures()}\r\n                {/** Pagination is acomponent to manage the pagination */}\r\n                <Pagination\r\n                    dataPerPage={dataPerPage}\r\n                    totalData={departures.length}\r\n                    paginate={paginate}\r\n                />\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StopDetail","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Helmet } from 'react-helmet'\r\n\r\nconst ShowFavorites = () => {\r\n    var favList = []\r\n    const getArray = JSON.parse(localStorage.getItem('favorites') || '0')\r\n    for (let i = 0; i < getArray.length; i++) {\r\n        let x = getArray[i]\r\n        favList[i] = JSON.parse(localStorage.getItem([x]) || '')\r\n    }\r\n\r\n    /** method to get all the favorite stops */\r\n    const getStops = () => {\r\n        let selectedstops = []\r\n        if (Array.isArray(favList) && favList.length) {\r\n            favList.map((stop, i) => {\r\n                return selectedstops.push(\r\n                    <div>\r\n                        {\r\n                            stop ? (\r\n                                <p key={i}>\r\n                                    <Link to={`/stop/${getArray[i]}`}>{stop}</Link>\r\n                                </p>\r\n                            ) : \"\"\r\n                        }\r\n\r\n                    </div>\r\n                )\r\n            })\r\n            return selectedstops\r\n        }\r\n        else {\r\n            return (\r\n                <p>Nothing in the Favorites list</p>\r\n            )\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"container mt-5\">\r\n            <Helmet>\r\n                <title>Transport - My Favorites</title>\r\n                <meta\r\n                    name='description'\r\n                    content='my favorites page'\r\n                />\r\n            </Helmet>\r\n            <h2>My Favorite List</h2>\r\n            <div className=\"mt-5\">\r\n                {getStops()}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ShowFavorites","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst Navbar = () => {\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\r\n                    <div className=\"navbar-nav\">\r\n                        <NavLink className=\"nav-item nav-link active\" exact to='/'>Home</NavLink>\r\n                        <NavLink className=\"nav-item nav-link active\" exact to='/favorites'>My Favorites</NavLink>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar","import React from 'react'\r\nimport Navbar from '../components/Navbar'\r\n\r\nconst Layout = (props) => (\r\n    <div>\r\n        <Navbar />\r\n        {props.children}\r\n    </div>\r\n)\r\n\r\nexport default Layout","import './App.css';\nimport Home from './containers/Home';\nimport StopDetail from './containers/StopDetail'\nimport ShowFavorites from './containers/ShowFavorites'\n\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport Layout from './hocs/Layout';\n\nconst App = () => (\n  <Router>\n    <Layout>\n      <Switch>\n        <Route exact path='/favorites' component={ShowFavorites} />\n        <Route exact path='/stop/:id' component={StopDetail} />\n        <Route exact path='/' component={Home} />\n      </Switch>\n    </Layout>\n  </Router>\n)\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport swDev from './swDev';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\nswDev();\n","export default function swDev() {\r\n\r\n    let swUrl = `${process.env.PUBLIC_URL}/sw.js`\r\n    navigator.serviceWorker.register(swUrl).then((response) => {\r\n        console.log(\"response\", response)\r\n    })\r\n}"],"sourceRoot":""}